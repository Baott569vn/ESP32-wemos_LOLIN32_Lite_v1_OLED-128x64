/*********
  Rui Santos
  Complete project details at https://randomnerdtutorials.com  
*********/

#include <Wire.h>
#include <Adafruit_GFX.h>
#include <Adafruit_SSD1306.h>

#define SCREEN_WIDTH 128
#define SCREEN_HEIGHT 64

Adafruit_SSD1306 display(SCREEN_WIDTH, SCREEN_HEIGHT, &Wire, -1);

// 'nen', 128x64px
const unsigned char epd_bitmap_nen[] PROGMEM = {
  0x7f, 0xef, 0xe7, 0x9f, 0x3f, 0xff, 0xef, 0x9f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  0x7f, 0xef, 0xef, 0x9f, 0x3e, 0xfb, 0xef, 0x9f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xef, 0xe7, 0xdf, 0x3e, 0xfb, 0xef, 0x9f, 0xff, 0xff, 0xf1, 0xff, 0xff, 0xff, 0xff, 0xff,
  0x7f, 0xef, 0xf7, 0x9f, 0x7e, 0xfb, 0xef, 0x9f, 0xff, 0xf8, 0x11, 0xff, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xef, 0xe7, 0xdf, 0x3e, 0xfb, 0xef, 0xdf, 0xff, 0xfb, 0xf9, 0xff, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xe7, 0x9f, 0x7e, 0xf3, 0xe7, 0x9f, 0xff, 0xfb, 0xff, 0xff, 0xf9, 0xff, 0xff, 0xff,
  0xff, 0xe7, 0xc3, 0x0e, 0x18, 0x61, 0xc7, 0x0f, 0xff, 0xf8, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff,
  0xff, 0xc7, 0xc7, 0x0e, 0x38, 0x71, 0xc7, 0x1f, 0xff, 0xff, 0xff, 0xff, 0xf9, 0xff, 0xff, 0xff,
  0xff, 0xe7, 0xc3, 0x0e, 0x18, 0x61, 0xc3, 0x0f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xe7, 0xff,
  0xff, 0xff, 0xc3, 0x8e, 0x38, 0x61, 0x87, 0x0f, 0xff, 0xff, 0xff, 0xfc, 0x80, 0x00, 0x07, 0xff,
  0xff, 0xff, 0x82, 0x00, 0x00, 0x20, 0x42, 0x0f, 0xff, 0xff, 0xff, 0xf5, 0x77, 0xd6, 0xa7, 0xff,
  0xff, 0xfd, 0x00, 0x00, 0x00, 0x00, 0x00, 0x05, 0x7b, 0xff, 0xff, 0xe7, 0xff, 0xff, 0xef, 0xff,
  0xff, 0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x20, 0x7f, 0xff, 0xcf, 0xff, 0xff, 0xff, 0xff,
  0x00, 0x00, 0x1f, 0xff, 0xff, 0xff, 0xff, 0xc0, 0x00, 0x7f, 0xff, 0x3f, 0xff, 0xff, 0xff, 0xfc,
  0xff, 0xf8, 0x1e, 0xea, 0xbe, 0xbe, 0xb9, 0xc0, 0x70, 0x7f, 0xfe, 0x7f, 0xfb, 0xff, 0xff, 0xfc,
  0xff, 0xfb, 0x19, 0x04, 0x40, 0x80, 0x04, 0x43, 0x7f, 0xf0, 0x80, 0x00, 0x81, 0xff, 0xff, 0xfc,
  0xff, 0xff, 0x9b, 0xff, 0xff, 0xff, 0xff, 0x47, 0xff, 0xf7, 0xff, 0xfb, 0xe1, 0xff, 0xff, 0xff,
  0xff, 0xff, 0x9b, 0xff, 0xff, 0xff, 0xff, 0x67, 0xff, 0xcf, 0xff, 0xf9, 0xfb, 0xff, 0xff, 0xff,
  0xff, 0xf8, 0x1b, 0xff, 0xff, 0xff, 0xff, 0x40, 0x3f, 0x9f, 0xff, 0xfe, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xf0, 0x1b, 0xff, 0xff, 0xff, 0xff, 0x40, 0x20, 0x7f, 0xff, 0xfe, 0x2a, 0xcd, 0x56, 0xa9,
  0xff, 0xf0, 0x1b, 0xff, 0x33, 0x77, 0xff, 0x60, 0x3f, 0xff, 0xff, 0xff, 0x80, 0x20, 0x10, 0x04,
  0xff, 0xf8, 0x1b, 0xfc, 0x63, 0x31, 0xff, 0x41, 0x7f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0x9b, 0xf8, 0xc3, 0x18, 0xfe, 0x47, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0x9b, 0xf0, 0xc3, 0x18, 0x7f, 0x47, 0xff, 0xff, 0xff, 0xff, 0xff, 0xc1, 0xff, 0xff,
  0xff, 0xf8, 0x1b, 0xe1, 0x83, 0x0c, 0x3e, 0xc4, 0x7f, 0xff, 0xff, 0xff, 0xff, 0xcc, 0xff, 0xff,
  0x41, 0x50, 0x1b, 0xe1, 0xc7, 0x0c, 0x3f, 0x40, 0x22, 0xa5, 0x00, 0x8a, 0x28, 0x1e, 0xff, 0xff,
  0x00, 0x00, 0x1b, 0xff, 0xff, 0xff, 0xff, 0x60, 0x00, 0x00, 0x04, 0x00, 0x00, 0x1e, 0xff, 0xff,
  0xff, 0xf8, 0x1b, 0xdb, 0xb7, 0x4e, 0x1f, 0x40, 0x3f, 0xff, 0xff, 0xff, 0xff, 0xdc, 0xff, 0xff,
  0xff, 0xff, 0x9b, 0x83, 0x03, 0x06, 0x0f, 0x47, 0xff, 0xff, 0xff, 0xff, 0xff, 0xc1, 0xff, 0xff,
  0xff, 0xff, 0x9b, 0x83, 0x03, 0x3f, 0xe6, 0x47, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfb, 0xff, 0xfe,
  0xff, 0xfd, 0x1b, 0x03, 0x03, 0xf8, 0xff, 0xe6, 0x7f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfe,
  0xff, 0xf0, 0x1b, 0x03, 0x03, 0xc0, 0x3e, 0x40, 0x3f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf8,
  0x00, 0x00, 0x1b, 0xff, 0xff, 0x80, 0x0f, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0xff, 0xf0, 0x1b, 0xff, 0xff, 0x00, 0x0e, 0x40, 0x7f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0x1b, 0x03, 0x06, 0x00, 0x07, 0x67, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0x9b, 0x03, 0x06, 0x00, 0x07, 0x47, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0x9b, 0x83, 0x06, 0x70, 0xe3, 0x47, 0xff, 0xfd, 0x41, 0xff, 0xfc, 0x00, 0x00, 0x00,
  0xff, 0xf0, 0x1b, 0x83, 0x06, 0x79, 0xf3, 0x40, 0x3f, 0xfc, 0x01, 0xff, 0xe0, 0x02, 0x00, 0x10,
  0x00, 0x00, 0x1b, 0x83, 0x06, 0x79, 0xe2, 0x40, 0x00, 0x00, 0x01, 0xff, 0xc3, 0xff, 0xff, 0xff,
  0x8a, 0x00, 0x1b, 0xff, 0xfe, 0x30, 0xe3, 0x60, 0x20, 0x04, 0x01, 0xff, 0x0f, 0xff, 0xff, 0xff,
  0xff, 0xf8, 0x1b, 0xff, 0xfe, 0x00, 0x03, 0x41, 0x7f, 0xfe, 0x01, 0xff, 0x3f, 0xff, 0xff, 0xff,
  0xff, 0xff, 0x9b, 0xe1, 0x86, 0x00, 0x06, 0x47, 0xff, 0xfe, 0xb5, 0xf8, 0x7f, 0xff, 0xff, 0xff,
  0xff, 0xff, 0x9b, 0xf0, 0xc3, 0x00, 0x0f, 0x47, 0xff, 0xff, 0xff, 0xf1, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xf4, 0x1b, 0xf0, 0xc3, 0x80, 0x0f, 0x60, 0x7f, 0xff, 0xff, 0xe3, 0xff, 0xff, 0xff, 0xff,
  0x20, 0x00, 0x1b, 0xfc, 0x63, 0x80, 0x0f, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x2a, 0xa0, 0x1b, 0xfe, 0x73, 0x99, 0x8e, 0x40, 0x00, 0x00, 0x04, 0x20, 0x04, 0x00, 0x00, 0x00,
  0xff, 0xf8, 0x1b, 0xff, 0xbb, 0x99, 0x9f, 0xe0, 0x7f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0x9b, 0xff, 0xff, 0xd9, 0x9f, 0x47, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0x9b, 0xff, 0xff, 0xfd, 0xff, 0x47, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xfa, 0x18, 0x00, 0x00, 0x00, 0x00, 0x62, 0x7f, 0xfc, 0x01, 0xff, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xf0, 0x1f, 0xff, 0xff, 0xff, 0xff, 0xc0, 0x00, 0x08, 0x01, 0xff, 0xff, 0xff, 0xff, 0xff,
  0x00, 0x00, 0x1f, 0xff, 0xff, 0xff, 0xff, 0xc0, 0x02, 0x00, 0x01, 0xff, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7f, 0xfc, 0x01, 0xff, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0x80, 0x00, 0x00, 0x00, 0x00, 0x07, 0xff, 0xfc, 0x01, 0xff, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0x82, 0x08, 0x08, 0x41, 0x02, 0x0f, 0x07, 0xc7, 0xe1, 0xe0, 0x60, 0x7f, 0xff, 0xff,
  0xff, 0xff, 0xc3, 0x0e, 0x38, 0x61, 0xc3, 0x0f, 0x03, 0xc7, 0xc0, 0xe0, 0x60, 0x60, 0xf1, 0xe3,
  0xff, 0xff, 0xc3, 0x0e, 0x18, 0x61, 0xc3, 0x0f, 0x33, 0x93, 0xcc, 0xf9, 0xf9, 0xe0, 0xc1, 0xc1,
  0xff, 0xff, 0xc3, 0x0e, 0x18, 0xf1, 0xc7, 0x0f, 0x33, 0x93, 0x9e, 0x79, 0xf9, 0xef, 0xdf, 0x9c,
  0xff, 0xff, 0xc7, 0x8e, 0x38, 0x61, 0xc7, 0x1f, 0x07, 0x93, 0x9e, 0x79, 0xf9, 0xc3, 0x91, 0x9c,
  0xff, 0xff, 0xf7, 0xdf, 0x3d, 0xf7, 0xff, 0x9f, 0x03, 0x11, 0x9e, 0x79, 0xf9, 0xc1, 0x80, 0x80,
  0xff, 0xff, 0xf7, 0xff, 0x3d, 0xf7, 0xff, 0x9f, 0x39, 0x01, 0x9e, 0x79, 0xf9, 0xfc, 0x9c, 0xec,
  0xff, 0xff, 0xef, 0xdf, 0x3d, 0xf7, 0xff, 0x1f, 0x39, 0x01, 0xcc, 0xf9, 0xf9, 0xfc, 0x9c, 0xf9,
  0xff, 0xff, 0xe7, 0xff, 0x3d, 0xf7, 0xfe, 0x0f, 0x01, 0x39, 0xc0, 0xf9, 0xf9, 0xc1, 0xc1, 0xc1,
  0xff, 0xff, 0xef, 0xdf, 0x7d, 0xf7, 0xff, 0x1f, 0x06, 0x38, 0xe1, 0xf9, 0xf9, 0xc3, 0xe3, 0xc7
};

const char sybol[] = { '-', '\\', '|', '/' };

void setup() {
  Serial.begin(115200);
  randomSeed(0);
  // Start I2C Communication SDA = 5 and SCL = 4 on Wemos Lolin32 ESP32 with built-in SSD1306 OLED
  Wire.begin(5, 4);

  if (!display.begin(SSD1306_SWITCHCAPVCC, 0x3C, false, false)) {
    Serial.println(F("SSD1306 allocation failed"));
    for (;;)
      ;
  }

  delay(5000);  // Pause for 2 seconds
  // Clear the buffer.
  display.clearDisplay();

  // Draw bitmap on the screen
  display.drawBitmap(0, 0, epd_bitmap_nen, 128, 64, 1);
  display.display();
  delay(5000);
  display.clearDisplay();
  display.setTextSize(1);
  display.setTextColor(WHITE);
}

void loadingDis() {
  int lengData = sizeof(sybol) / sizeof(sybol[0]);
  byte seedRan = random(0, 20 + 1);
  for (int i{ 0 }; i <= seedRan; ++i) {
    display.setCursor(16, 32);
    display.println(String(F("loading... ")) + sybol[i % lengData]);
    display.display();
    delay(100);
    display.clearDisplay();
  }
}

String generateRandomString(int length) {
  String characters = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789";
  String randomString = "";

  for (int i = 0; i < length; i++) {
    int randomIndex = random(characters.length());
    randomString += characters.charAt(randomIndex);
  }

  return randomString;
}

void displaY() {
  int seedRan_ID = random(10, 100 + 1);
  for (int a{ 0 }; a <= 200; ++a) {
    byte length_ranKey = random(10, 30 + 1);
    display.setCursor(16, 20);
    display.println(F("Is Show:"));
    display.setCursor(0, 35);
    String flashString = F("text: ");
    display.println(flashString + generateRandomString(length_ranKey));
    display.display();
    delay(seedRan_ID);
    display.clearDisplay();
    delay(seedRan_ID);
  }
}

void loop() {
  loadingDis();
  delay(500);
  displaY();
}